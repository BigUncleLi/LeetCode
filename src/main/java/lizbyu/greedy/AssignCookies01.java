package lizbyu.greedy;

import lizbyu.utils.log.LogUtils;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class AssignCookies01 {
    private static final String TAG = "AssignCookies01";

    public int findContentChildren(int[] g, int[] s) {
        int maxContentCount = 0;
        int cookieMark = 0;
        List<Integer> children = getList(g);
        List<Integer> cookies = getList(s);
        Collections.sort(children);
        Collections.sort(cookies);

        for (int childIndex = 0; childIndex < children.size(); childIndex++) {
            for (int cookieIndex = cookieMark; cookieIndex < cookies.size(); cookieIndex++) {
                if (children.get(childIndex) <= cookies.get(cookieIndex)) {
                    maxContentCount++;
                    if (cookieIndex == (cookies.size() - 1)) {
                        return maxContentCount;
                    } else {
                        cookieMark = cookieIndex + 1;
                    }
                    break;
                }
            }
        }

        return maxContentCount;
    }

    private List<Integer> getList(int[] array) {
        List<Integer> list = new ArrayList<Integer>();
        for (int num : array) {
            list.add(num);
        }
        return list;
    }

    public static void main(String[] args) {
//		int[] children = {1, 2, 3};
//		int[] cookies = {1, 1};
		
	/*	int[] children = {250,490,328,149,495,325,314,360,333,418,430,458};
		int[] cookies = {149,376,71,228,110,215,410,363,135,508,268,494,288,24,362,20,250,
				5,247,118,152,393,458,354,201,188,425,167,220,114,148,43,403,
				385,512,459,71,425,142,102,361,102,232,203,25,461,298,437,252,
				364,171,240,233,257,305,346,307,408,163,216,243,261,137,319,33,
				91,116,390,139,283,174,409,191,338,123,231,101,458,497,306,400,
				513,175,454,273,88,169,250,196,109,505,413,371,448,12,193,396,321,
				466,526,276,276,198,260,131,322,65,381,204,32,83,431,81,108,366,188,
				443,331,102,72,496,521,502,165,439,161,257,324,348,176,272,341,230,
				323,124,13,51,241,186,329,70,387,93,126,159,370,292,16,211,327,431,
				26,70,239,379,368,215,501,382,299,481,163,100,488,259,524,481,87,118,
				112,110,425,295,352,62,162,19,404,301,163,389,13,383,43,397,165,385,274,
				59,499,136,309,301,345,381,124,394,492,96,243,4,297,153,9,210,291,33,
				450,202,313,138,214,308,239,129,154,354,289,484,388,351,339,337,161,
				97,185,190,498,348,242,38,217,343,170,269,465,514,89,366,447,166,52,
				33,436,268,3,74,505,403,302,513,69,439,68,72,403,33,130,466,417,186,
				339,328,237,138,427,392,496,430,442,260,229,372,217,399,203,170,246,
				153,137,358,138,22,19,110,304,399,458,165,372,254,358,364,345,52,150,
				121,226,156,231,83,377,237,342,184,27,73,392,238,366,258,434,498,184,
				309,394,110,246,430,437,33,488,520,69,24,18,221,146,19,147,283,407,
				437,185,399,238,471,117,110,266,507,263,293,94,314,31,217,224,36,515,
				147,432,270,327,521,113,153,14,160,435,396,501,13,461,103,441,461,68,
				55,510,380,291,305,365,511,218,515,148,324,136,291,519,201,192,97,183,
				448,294,242,379,52,154,224,183,344,452,240,380,338,337,437,92,206,490,
				405,396,274,41,305,170,423,437,92,480,477,260,224,176,239,466,525,458,
				226,189,251,516,479,305,463,116,126,88,490,93,389,246,480,139,193,303,
				205,270,83,89,461,492,209,311,368,457,478,188,484,4,501,513,18,2,90,39,
				205,500,391,191,229,32,147,438,123,493,71,363,143,163,110,199,305,476,
				430,86,378,416,444,325,207,519,380,81,116,503,13,211,290,327,510,141,37,
				242,370,117,208,58,336,432,19,474,488,74,472,63,287,11,470,221,349,211,
				191,497,50,442,315,376,355,302,206,291,376,499,405,498,202,40,115,178,66,
				438,446,498,443,292,123,493,505,205,490,368,349,341,107,290,428,141,271,
				117,54,410,172,92,450,524,427,371,69,77,35,234,25,152,365,509,154,61,143,
				111,188,101,327,21,378,186,57,241,351,136,213,143,86,325,83,358,79,427,406,
				491,192,248,360,428,478,385,252,270,106,524,343,92,483,9,15,54,511,296,238,
				392,106,198,64,394,122,187,14,481,50,221,226,63,50,449,504,357,499,120,448,
				275,363,465,451,68,25,233,124,520,415,90,302,246,19,63,335,308,235,297,410,
				349,78,324,210,327,199,202,455,387,159,148,344,375,127,368,305,347,307,451,
				412,323,188,16,139,143,362,228,493,334,341,406,113,368,234,439,193,211,500,333,
				231,311,204,99,82,52,66,286,142,27,445,12,410,370,118,104,358,330,96,351,93,
				469,63,450,14,455,309,84,101,58,166,224,34,158,322,388,345,328,329,509,168,292,
				367,5,309,477,75,306,524,416,35,417,229,448,513,99,179,526,147,390,260,459,394,503,414, 490};*/

        int[] children = {10, 9, 8, 7, 10, 9, 8, 7};
        int[] cookies = {10, 9, 8, 7};
        LogUtils.d(TAG, "start");
        LogUtils.d(TAG, new AssignCookies01().findContentChildren(children, cookies));
    }
}
